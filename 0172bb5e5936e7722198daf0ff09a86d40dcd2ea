{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d16e21dd_f40fc991",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-06-18T00:56:50Z",
      "side": 1,
      "message": "Can you quantify \u0027heavy\u0027?",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 5
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "699ccf42_c221ba76",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-06-18T00:56:50Z",
      "side": 1,
      "message": "Can you formulate on how much is \u0027significant\u0027?",
      "range": {
        "startLine": 10,
        "startChar": 48,
        "endLine": 10,
        "endChar": 59
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13ffb209_babc8643",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1127770
      },
      "writtenOn": "2021-06-18T17:06:35Z",
      "side": 1,
      "message": "After upgrade/ swichover\nWe used:\nthreadPoolSize \u003d 6\nbatchThreadPoolSize \u003d6\n\nAll queues where full of tasks for many h. We had high cpu load on pick h so increasing pool size was not an option.",
      "parentUuid": "d16e21dd_f40fc991",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 5
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69199611_31816f21",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1127770
      },
      "writtenOn": "2021-06-18T17:06:35Z",
      "side": 1,
      "message": "It depends on setup and load. I don\u0027t know how deep I may go into details NDA.\nWe test replication offloading feature that waits for event replication completed. Event is transported by HA plugin. We wasn\u0027t happy about performance increase so we check thread dumps and saw that lots of replication task was blocked because it was waiting for an event. This how we identify this bottleneck.",
      "parentUuid": "699ccf42_c221ba76",
      "range": {
        "startLine": 10,
        "startChar": 48,
        "endLine": 10,
        "endChar": 59
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "176dcf73_74127f4e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-06-18T21:31:38Z",
      "side": 1,
      "message": "OK, makes sense. Basically we would like to have a different scheduler for the broadcasting of stream events, to isolate them from the bulk of reindexing events that may jam the forwarding queue.\n\nCan you explain that use-case in the commit message?\n\nIt makes a lot of sense to me.",
      "parentUuid": "69199611_31816f21",
      "range": {
        "startLine": 10,
        "startChar": 48,
        "endLine": 10,
        "endChar": 59
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44e491d4_97b52985",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-06-18T21:31:38Z",
      "side": 1,
      "message": "Could that be because of the online reindexing causing a flood of events to forward to the other side?",
      "parentUuid": "13ffb209_babc8643",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 5
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "708c0372_70a926a3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1127770
      },
      "writtenOn": "2021-06-20T14:59:53Z",
      "side": 1,
      "message": "You mean not reindexing events but events? Thats also possibile but  the events handling on HA site its simple and fast (just push to gerrit core) so they should cause delay.",
      "parentUuid": "44e491d4_97b52985",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 5
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "243e94ca_ce686f8e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1127770
      },
      "writtenOn": "2021-06-20T14:59:53Z",
      "side": 1,
      "message": "I added Your sentence with small change.",
      "parentUuid": "176dcf73_74127f4e",
      "range": {
        "startLine": 10,
        "startChar": 48,
        "endLine": 10,
        "endChar": 59
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edee842d_218b8c29",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1127770
      },
      "writtenOn": "2021-06-20T15:00:41Z",
      "side": 1,
      "message": "I mean shouldn\u0027t",
      "parentUuid": "708c0372_70a926a3",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 5
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65f05ac6_063eeddb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-06-22T01:21:16Z",
      "side": 1,
      "message": "Have you analysed why the CPU was high? I guess it was on the receiver side consuming the events. In my experience, that typically happens because of flooding of reindexing events causing the re-trigger of all Prolog rules on all changes.\n\nHaving a separate queue for stream events would help at least for not delay the propagation of triggering of builds in the meantime. The online reindex may last for several hours that matches the slowdown you guys have experienced.",
      "parentUuid": "edee842d_218b8c29",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 5
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d81a63c_297e0bc1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-06-22T01:21:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "243e94ca_ce686f8e",
      "range": {
        "startLine": 10,
        "startChar": 48,
        "endLine": 10,
        "endChar": 59
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09c16b6e_887e7c15",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-06-22T01:21:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "edee842d_218b8c29",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 5
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad0aa2bb_75f8ca4d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1127770
      },
      "writtenOn": "2021-07-13T16:17:53Z",
      "side": 1,
      "message": "Sorry for late response I was on vacations. \nThere where few separate reasons the RCA still ongoing. I dont want to jump into conclusion. The system was working well and stable just performance was not good enough in pick H. I don\u0027t remember that I saw lots of reindex fails and re-trigger but for sure we spotted huge amount of \"com.ericsson.gerrit.plugins.highavailability.index.IndexEventLocks : Acquisition of the locking of account/1011671 timed out after 5 msec\" which suggest that we have had to less numStripedLocks. One of things we try to reduce cpu load on active site was replication offloading. Our solution rely on event replication completed forwarded by HA. This how we end up with this change.",
      "parentUuid": "65f05ac6_063eeddb",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 5
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2367806_f7f29d59",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1127770
      },
      "writtenOn": "2021-07-19T18:33:15Z",
      "side": 1,
      "message": "@Luca can we proceed with review?",
      "parentUuid": "ad0aa2bb_75f8ca4d",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 5
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff2a40d7_ae7eda14",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-07-20T01:53:54Z",
      "side": 1,
      "message": "Have you concluded the RCA? Is this the root cause of the problems? Was this one of the causes or just a side-effect of a different problem?",
      "parentUuid": "b2367806_f7f29d59",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 5
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd7c07bc_bf84be55",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1127770
      },
      "writtenOn": "2021-07-20T19:13:17Z",
      "side": 1,
      "message": "Thx for the replay. Regarding \"Acquisition of the locking\" its side effect. We reproduce this during performance test+ running manual reindexing on big projects. But I think we miss a point. This change is for splitting events executor patch with index change tasks. I dont see a point why before we have sparate executors for batch, index and event and all ends in singe queue with singe executor. We want events that are small objects/task should be send and process as fast as possible.",
      "parentUuid": "ff2a40d7_ae7eda14",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 5
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "700950d8_9b96fb65",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-07-21T00:51:09Z",
      "side": 1,
      "message": "\u003e Thx for the replay. Regarding \"Acquisition of the locking\" its side effect. We reproduce this during performance test+ running manual reindexing on big projects.\n\nI see: there is a setting for NOT propagating manual reindexing and therefore avoid this problem altogether called \u0027synchronizedForced\u0027 See [1]. Basically, you can disable the propagation of all events that are not \"naturally created\" in Gerrit.\n\n\u003e But I think we miss a point. This change is for splitting events executor patch with index change tasks. I dont see a point why before we have sparate executors for batch, index and event and all ends in singe queue with singe executor. We want events that are small objects/task should be send and process as fast as possible.\n\nCan I challenge the statement? Imagine you have the creation of one change and then the event of patch-set created: you want to preserve the propagation of the two in this specific order, isn\u0027t it? Having two different executors would potentially leading to the event being transferred before the reindex of the change and then creating an inconsistency.\n\n[1] https://gerrit.googlesource.com/plugins/high-availability/+/refs/heads/stable-3.1/src/main/resources/Documentation/config.md",
      "parentUuid": "fd7c07bc_bf84be55",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 5
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "792f3553_cbb985d9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-06-18T00:56:50Z",
      "side": 1,
      "message": "Nit: use imperative form",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 22
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "075fece8_eb46a3a6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1127770
      },
      "writtenOn": "2021-06-18T17:06:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "792f3553_cbb985d9",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 22
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4b4dda2_e35f8287",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-06-18T00:56:50Z",
      "side": 1,
      "message": "nit: Bug",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 3
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46752da7_3bb00511",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1127770
      },
      "writtenOn": "2021-06-18T17:06:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f4b4dda2_e35f8287",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 3
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4fac720_0943da81",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-06-18T00:56:50Z",
      "side": 1,
      "message": "nit: empty line",
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42ef754a_ec96783a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1127770
      },
      "writtenOn": "2021-06-18T17:06:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4fac720_0943da81",
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5bb50221_d07be96b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-06-18T00:58:10Z",
      "side": 1,
      "message": "The -1 indicates that I believe it needs some discussion: I don\u0027t believe this is a bug because we never had a dedicated thread pool for forwarding stream events.\n\nIt is a very interesting and useful addition though, which needs a bit of brainstorming for making it a more QoS (or priority-based?) executors system.",
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a64583e_f669be57",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1127770
      },
      "writtenOn": "2021-06-18T17:06:35Z",
      "side": 1,
      "message": "Sure discussion is needed. I expect and ask for community opinion, can You add more reviewers that can provide input? \nMaybe increasing RestForwarderScheduler size will do a job? We can make this configurable.",
      "parentUuid": "5bb50221_d07be96b",
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b03894ad_2f01946d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-06-18T21:31:38Z",
      "side": 1,
      "message": "\u003e Sure discussion is needed. I expect and ask for community opinion, can You add more reviewers that can provide input? \n\nDone.\n\n\u003e Maybe increasing RestForwarderScheduler size will do a job? We can make this configurable.\n\nThat would do the job I believe.",
      "parentUuid": "2a64583e_f669be57",
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e587b0d9_0256f8f1",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/forwarder/rest/RestForwarder.java",
        "patchSetId": 1
      },
      "lineNbr": 169,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-06-18T00:56:50Z",
      "side": 1,
      "message": "I believe you are trying to implement a sort of a priority-based queue? Or just having separate channels altogether for sending/receiving different event types?",
      "range": {
        "startLine": 166,
        "startChar": 0,
        "endLine": 169,
        "endChar": 49
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d38ccdd9_7d62f36a",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/forwarder/rest/RestForwarder.java",
        "patchSetId": 1
      },
      "lineNbr": 169,
      "author": {
        "id": 1127770
      },
      "writtenOn": "2021-06-18T17:06:35Z",
      "side": 1,
      "message": "Yes the idea is that Event should use different queue and executor to work in parallel regardless of indexing tasks.",
      "parentUuid": "e587b0d9_0256f8f1",
      "range": {
        "startLine": 166,
        "startChar": 0,
        "endLine": 169,
        "endChar": 49
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e30116c_4c59684b",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/forwarder/rest/RestForwarder.java",
        "patchSetId": 1
      },
      "lineNbr": 169,
      "author": {
        "id": 1127770
      },
      "writtenOn": "2021-07-13T16:17:53Z",
      "side": 1,
      "message": "can I resolve this?",
      "parentUuid": "d38ccdd9_7d62f36a",
      "range": {
        "startLine": 166,
        "startChar": 0,
        "endLine": 169,
        "endChar": 49
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1660e2df_8070e2bb",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/forwarder/rest/RestForwarder.java",
        "patchSetId": 1
      },
      "lineNbr": 169,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-07-21T00:51:09Z",
      "side": 1,
      "message": "I believe they should stay in the same queue: see the case of a change created and the associated patch-set created event, their order should be preserved.",
      "parentUuid": "7e30116c_4c59684b",
      "range": {
        "startLine": 166,
        "startChar": 0,
        "endLine": 169,
        "endChar": 49
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "868153eb_7f699628",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/forwarder/rest/RestForwarderScheduler.java",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-06-18T00:56:50Z",
      "side": 1,
      "message": "By extending the concept, you could have a set of different executors per event type: why not making this a map of executor services?",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 38,
        "endChar": 55
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85b0a9d7_7ca8b3ca",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/forwarder/rest/RestForwarderScheduler.java",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1127770
      },
      "writtenOn": "2021-06-18T17:06:35Z",
      "side": 1,
      "message": "There are to many event types. I don\u0027t see benefit of having 20 task executor services. The extension could be have 1 per rest point but I only see sense to add separate for batch Indexing if needed.",
      "parentUuid": "868153eb_7f699628",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 38,
        "endChar": 55
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "232cb21a_a9c7f107",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/forwarder/rest/RestForwarderScheduler.java",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1127770
      },
      "writtenOn": "2021-07-13T16:17:53Z",
      "side": 1,
      "message": "can I resolve this?",
      "parentUuid": "85b0a9d7_7ca8b3ca",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 38,
        "endChar": 55
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43ed631a_f05fb313",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/forwarder/rest/RestForwarderScheduler.java",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-07-21T00:51:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "232cb21a_a9c7f107",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 38,
        "endChar": 55
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14925b1f_66a8e2af",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/forwarder/rest/RestForwarderScheduler.java",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-06-18T00:56:50Z",
      "side": 1,
      "message": "I believe the formula is a bit more complex, because in the documentation we say that:\n- IF batchThreadPoolSize is not defined, then there is a single thread-pool for both interactive and batch operations\n- IF batchThreadPoolSize is defined, then there are two pools",
      "range": {
        "startLine": 75,
        "startChar": 14,
        "endLine": 75,
        "endChar": 79
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3061a97_04d20702",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/forwarder/rest/RestForwarderScheduler.java",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1127770
      },
      "writtenOn": "2021-06-18T17:06:35Z",
      "side": 1,
      "message": "Then documentation is wrong, it is not how it is implemented. \nIf batchThreadPoolSize is not defined then batchThreadPoolSize \u003d threadPoolSize. In result for default values we have\nthreadPoolSize \u003d 4\nbatchThreadPoolSize \u003d4\nForward-Stream-Event \u003d1 (HARD coded in EventExecutorProvider)\nso without this change we have 9 threads that works on POJO that trys to send REST event though RestForwarderScheduler which uses 4 threads",
      "parentUuid": "14925b1f_66a8e2af",
      "range": {
        "startLine": 75,
        "startChar": 14,
        "endLine": 75,
        "endChar": 79
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a0307a1_f75a5616",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/forwarder/rest/RestForwarderScheduler.java",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1127770
      },
      "writtenOn": "2021-07-13T16:17:53Z",
      "side": 1,
      "message": "can I resolve this?",
      "parentUuid": "c3061a97_04d20702",
      "range": {
        "startLine": 75,
        "startChar": 14,
        "endLine": 75,
        "endChar": 79
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a476137_e31edebc",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/forwarder/rest/RestForwarderScheduler.java",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-07-21T00:51:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0a0307a1_f75a5616",
      "range": {
        "startLine": 75,
        "startChar": 14,
        "endLine": 75,
        "endChar": 79
      },
      "revId": "0172bb5e5936e7722198daf0ff09a86d40dcd2ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}