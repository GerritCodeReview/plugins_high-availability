{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8dbc2a3c_246db05e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-19T12:22:16Z",
      "side": 1,
      "message": "Cool, that looks better :-)\nShould this be ported back to stable-3.1?",
      "revId": "3518aa97f9292fb25de72414c4662dcd1ce338ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e7b8eed_246d8dee",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/forwarder/ForwardedCacheEvictionHandler.java",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-19T12:36:02Z",
      "side": 1,
      "message": "After a second thought: this may NOT work when you are working on an NFS-mounted volume with write-through cache.\n\nThe evict() method does:\n\n  @Override\n  public void evict(Project.NameKey p) {\n    if (p !\u003d null) {\n      logger.atFine().log(\"Evict project \u0027%s\u0027\", p.get());\n      inMemoryProjectCache.invalidate(p.get());\n    }\n    indexer.get().index(p);\n  }\n\nThe call to the indexer is done *immediately* which is the wrong thing to do in this case, when the cache eviction is propagated synchronously from the primary node.\n\nThe NFS write-through cache may have some latency in propagating the data to the filesystem, which is typically longer than the latency in propagating the cache eviction event.\n\nKeeping the evictions and indexing separate would be best in this case.\n\nWe\u0027ll still get the reindexing events anyway, so we won\u0027t loose anything here.",
      "range": {
        "startLine": 55,
        "startChar": 6,
        "endLine": 55,
        "endChar": 24
      },
      "revId": "3518aa97f9292fb25de72414c4662dcd1ce338ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d564f77_03c4d107",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/forwarder/ForwardedCacheEvictionHandler.java",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2021-03-19T16:18:37Z",
      "side": 1,
      "message": "I agree on the argument of \"Keeping the evictions and indexing separate\". In that sense this change can be a base for discussing the need for reindexing after evicting (projects cache).\n\nI don\u0027t fully agree on the argument about the NFS cache. Propagating reindexing in a follow-up message will in the best case slightly improve the chance of seeing the update in the NFS but this is not guaranteed and this is not a safe way to deal with this issue (wait a little bit).\n\nOn the other side my tests show that when reindexing is done in the same call which evicts from the cache (using ProjectCache.evict) then the receiving node sees the changed project state. Propagating two independent events makes my tests to fail sporadically.\n\nMy conclusion is that it all has to do with how fast (re)indexing happens after the cache eviction (on the receiving node). If the indexing happens fast enough then the tests will succeed. If a request reaches the receiving node before the reindexing is done then that test will fail. So this is a bit opposite of what you say about NFS caches.\n\nLet\u0027s first clarify why does Gerrit core want to perform reindexing on each evict from the projects cache: I5b737803dae56331845c46719dc30de99ad6ff27",
      "parentUuid": "2e7b8eed_246d8dee",
      "range": {
        "startLine": 55,
        "startChar": 6,
        "endLine": 55,
        "endChar": 24
      },
      "revId": "3518aa97f9292fb25de72414c4662dcd1ce338ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48bfb217_831cf037",
        "filename": "src/test/java/com/ericsson/gerrit/plugins/highavailability/forwarder/ForwardedCacheEvictionHandlerTest.java",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-19T12:22:16Z",
      "side": 1,
      "message": "Can be inlined at L82",
      "range": {
        "startLine": 80,
        "startChar": 15,
        "endLine": 80,
        "endChar": 20
      },
      "revId": "3518aa97f9292fb25de72414c4662dcd1ce338ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}