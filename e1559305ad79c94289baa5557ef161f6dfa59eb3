{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "74e938a2_dac29e39",
        "filename": "src/test/java/com/ericsson/gerrit/plugins/highavailability/index/IndexEventHandlerTest.java",
        "patchSetId": 7
      },
      "lineNbr": 315,
      "author": {
        "id": 1127770
      },
      "writtenOn": "2022-07-28T14:27:55Z",
      "side": 1,
      "message": "Ok I dont see a point to create 2 threads. The idea of join should be to not start verify until reindex finish So you actually doing oposit way. You invoke threadVerify.join(); on veryfied thread that was not started??. This does not make sense.\nI suggest to leave the verified code without new thread. \n\nThe proper idea would be to get a handle to the thread that is pass by private ScheduledExecutorService executor and wait for it.\n\nIf this it not possible you can try bring back a orginal solution with   private class CurrentThreadScheduledExecutorService and wrap it with new thread. Then you can join this thread.\n\nPropose nr 3. In line 753\n\n\n    @Override\n    public void execute(Runnable command) {\n      command.run();\n    }\n    \n    and new thread pass commend to it.\n    and after run thread.join all in exucute methos\n    \nDo not modyfied any thing else",
      "range": {
        "startLine": 312,
        "startChar": 3,
        "endLine": 315,
        "endChar": 19
      },
      "revId": "e1559305ad79c94289baa5557ef161f6dfa59eb3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}