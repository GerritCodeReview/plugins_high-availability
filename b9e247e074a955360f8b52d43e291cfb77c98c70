{
  "comments": [
    {
      "key": {
        "uuid": "d615b823_195cefee",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/peers/JGroupsPeerInfoProvider.java",
        "patchSetId": 20
      },
      "lineNbr": 69,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-08-31T02:42:44Z",
      "side": 1,
      "message": "This is null when there is no jgroups configuration, which results in NPEs later.",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 69,
        "endChar": 17
      },
      "revId": "b9e247e074a955360f8b52d43e291cfb77c98c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c60c504e_601026d9",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/peers/JGroupsPeerInfoProvider.java",
        "patchSetId": 20
      },
      "lineNbr": 69,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-08-31T07:31:35Z",
      "side": 1,
      "message": "How to reproduce this issue?\n\nJGroupsPeerInfoProvider should only be used when peerInfo.strategy() is JGROUPS, in which case\nthe Configuration.peerInfoJGroups is set to a non-null value.\n\nI wonder if the error you have seen is caused by an issue in mock setup.",
      "parentUuid": "d615b823_195cefee",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 69,
        "endChar": 17
      },
      "revId": "b9e247e074a955360f8b52d43e291cfb77c98c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "821f67a3_65254879",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/peers/JGroupsPeerInfoProvider.java",
        "patchSetId": 20
      },
      "lineNbr": 69,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-08-31T07:39:08Z",
      "side": 1,
      "message": "It\u0027s reproduced by running the CacheEvictionIT.\n\nI haven\u0027t tried to reproduce it in a real server yet.",
      "parentUuid": "c60c504e_601026d9",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 69,
        "endChar": 17
      },
      "revId": "b9e247e074a955360f8b52d43e291cfb77c98c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69ec23da_9519bcb3",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/peers/JGroupsPeerInfoProvider.java",
        "patchSetId": 20
      },
      "lineNbr": 163,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-08-31T02:42:44Z",
      "side": 1,
      "message": "NPE",
      "range": {
        "startLine": 163,
        "startChar": 20,
        "endLine": 163,
        "endChar": 49
      },
      "revId": "b9e247e074a955360f8b52d43e291cfb77c98c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da81bb1e_dc1bd7b1",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/peers/JGroupsPeerInfoProvider.java",
        "patchSetId": 20
      },
      "lineNbr": 176,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-08-31T02:42:44Z",
      "side": 1,
      "message": "NPE",
      "range": {
        "startLine": 176,
        "startChar": 43,
        "endLine": 176,
        "endChar": 70
      },
      "revId": "b9e247e074a955360f8b52d43e291cfb77c98c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c33bfe8_f07dcb66",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/peers/JGroupsPeerInfoProvider.java",
        "patchSetId": 20
      },
      "lineNbr": 189,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-08-31T02:42:44Z",
      "side": 1,
      "message": "Should not connect if there is no jgoups config.",
      "range": {
        "startLine": 189,
        "startChar": 3,
        "endLine": 189,
        "endChar": 14
      },
      "revId": "b9e247e074a955360f8b52d43e291cfb77c98c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2f22995_236c58bd",
        "filename": "src/test/java/com/ericsson/gerrit/plugins/highavailability/ConfigurationTest.java",
        "patchSetId": 20
      },
      "lineNbr": 0,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-08-30T14:06:00Z",
      "side": 1,
      "message": "Hugo didn\u0027t yet comment but I am quite sure that we will get CR-1 for missing tests for the (new) jgroups configuration.",
      "revId": "b9e247e074a955360f8b52d43e291cfb77c98c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5aa0cffb_57943083",
        "filename": "src/test/java/com/ericsson/gerrit/plugins/highavailability/ConfigurationTest.java",
        "patchSetId": 20
      },
      "lineNbr": 17,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-08-31T02:09:54Z",
      "side": 1,
      "message": "Don\u0027t use wildcard import.",
      "range": {
        "startLine": 17,
        "startChar": 72,
        "endLine": 17,
        "endChar": 75
      },
      "revId": "b9e247e074a955360f8b52d43e291cfb77c98c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d53c9618_b7264048",
        "filename": "src/test/java/com/ericsson/gerrit/plugins/highavailability/ConfigurationTest.java",
        "patchSetId": 20
      },
      "lineNbr": 17,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-08-31T07:20:15Z",
      "side": 1,
      "message": "I discussed this question with Hugo in Munich and he was OK to use wildcard import for his projects. However, if we have a general rule not to do that then I will do as you said.",
      "parentUuid": "5aa0cffb_57943083",
      "range": {
        "startLine": 17,
        "startChar": 72,
        "endLine": 17,
        "endChar": 75
      },
      "revId": "b9e247e074a955360f8b52d43e291cfb77c98c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "349e3b5d_0581861c",
        "filename": "src/test/java/com/ericsson/gerrit/plugins/highavailability/ConfigurationTest.java",
        "patchSetId": 20
      },
      "lineNbr": 17,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-08-31T07:26:37Z",
      "side": 1,
      "message": "According to the style section of the contributor guideline [1], gerrit \"generally follows the google java style guide\".  Section 3.3.1  [2] explicitly forbids wildcard imports.\n\n[1] http://gerrit-documentation.storage.googleapis.com/Documentation/2.14/dev-contributing.html#style\n[2] https://google.github.io/styleguide/javaguide.html",
      "parentUuid": "d53c9618_b7264048",
      "range": {
        "startLine": 17,
        "startChar": 72,
        "endLine": 17,
        "endChar": 75
      },
      "revId": "b9e247e074a955360f8b52d43e291cfb77c98c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}