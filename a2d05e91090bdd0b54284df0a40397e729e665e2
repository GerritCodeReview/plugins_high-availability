{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3a50acf8_7c1a0003",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-04-25T19:56:45Z",
      "side": 1,
      "message": "I believe that would be useful in Gerrit as well, regardless of the use-case of the high-availability plugin.\n\nCould you contribute this to Gerrit backend?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 20
      },
      "revId": "a2d05e91090bdd0b54284df0a40397e729e665e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d60a339_4917e1ff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2024-04-26T10:37:58Z",
      "side": 1,
      "message": "This endpoint is based on a simple change query: `-age:\u003cperiod\u003e` which can also be executed against Gerrit core, but then Gerrit core would provide a much larger response with all other change-data included. In addition, Gerrit core also performs visibility checks on the default change-query endpoint.\n\nI put this into the HA plugin because I thought this is a highly specialized endnpoint (condensed response, no visibility checks, no limit) for the HA plugin scenario.\n\nConsidering the given arguments what is your opinion?",
      "parentUuid": "3a50acf8_7c1a0003",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 20
      },
      "revId": "a2d05e91090bdd0b54284df0a40397e729e665e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "392916e8_ae9d8e90",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-04-25T16:39:07Z",
      "side": 1,
      "message": "This looks like just a duplicate of Gerrit change queries: what is the added value compared to running a REST-API with a query?",
      "revId": "a2d05e91090bdd0b54284df0a40397e729e665e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a880225_99c1e87b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2024-04-25T19:50:14Z",
      "side": 1,
      "message": "The main difference is that the standard change query returns a full `ChangeInfo` [1] per change which is a lot of data. This implementation only returns the changeids. This query is run frequently, hence I think it makes sense to add an optimized API.\n\nAs an experiment I ran a change query `age:2min` on our productive server, it returned 100 changes, response size was 3.3 MB, the list of 100 changeids in the response format used here had the size of 2.5kB which is a reduction by a factor of 1.3k.\n\n[1] https://gerrit-review.googlesource.com/Documentation/rest-api-changes.html#change-info",
      "parentUuid": "392916e8_ae9d8e90",
      "revId": "a2d05e91090bdd0b54284df0a40397e729e665e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}