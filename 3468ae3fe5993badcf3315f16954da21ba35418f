{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7442655a_de582bd9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-10-28T22:01:33Z",
      "side": 1,
      "message": "I do not see the point where the receiver locking is removed: the ForwardedIndexingHandler should get rid of the locks there, because the source side will make sure that no concurrent indexing is taking place.\n\nKeeping the locking on the receiver side would still allow a deadlock.",
      "revId": "3468ae3fe5993badcf3315f16954da21ba35418f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae0f1841_ea7ec2a5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-10-30T17:43:36Z",
      "side": 1,
      "message": "Removing locking on the receiver side makes perfect sense for active/passive mode. But in stable-3.3 we are introducing ability to have multiple RW masters. I\u0027m afraid that for those setups we still need some kind of protection for multiple masters triggering indexing for the same change on a single receiver.\n\nWe can remove locking here and introduce something similar on stable-3.3\n\nWDYT?",
      "parentUuid": "7442655a_de582bd9",
      "revId": "3468ae3fe5993badcf3315f16954da21ba35418f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d20479c_24bba943",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-10-30T23:16:08Z",
      "side": 1,
      "message": "I believe in v3.3 we are locking anyway on concurrent modifications of the single change, isn\u0027t it? That is done through the global ref-db.\n\nI believe we are then safe in removing the receiver side of the locks, because the sender would guarantee that there are no concurrent reindexing for the same change.",
      "parentUuid": "ae0f1841_ea7ec2a5",
      "revId": "3468ae3fe5993badcf3315f16954da21ba35418f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf97f559_765adfc2",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/Configuration.java",
        "patchSetId": 3
      },
      "lineNbr": 343,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-10-28T22:01:33Z",
      "side": 1,
      "message": "waitTimeout?",
      "range": {
        "startLine": 343,
        "startChar": 44,
        "endLine": 343,
        "endChar": 62
      },
      "revId": "3468ae3fe5993badcf3315f16954da21ba35418f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de452957_b9074897",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/Configuration.java",
        "patchSetId": 3
      },
      "lineNbr": 343,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-10-30T17:02:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf97f559_765adfc2",
      "range": {
        "startLine": 343,
        "startChar": 44,
        "endLine": 343,
        "endChar": 62
      },
      "revId": "3468ae3fe5993badcf3315f16954da21ba35418f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba091316_82ee6435",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/index/IndexEventLocks.java",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-10-28T22:01:33Z",
      "side": 1,
      "message": "Does it really make sense to have separate locks? The locking is per-id anyway, so if we have the index name and we have the item id, we can just make sure that they are combined in the locking key, without having to create four separate striped locks.",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 45,
        "endChar": 68
      },
      "revId": "3468ae3fe5993badcf3315f16954da21ba35418f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0801226c_882b2ccc",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/index/IndexEventLocks.java",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-10-30T17:02:20Z",
      "side": 1,
      "message": "I wanted to mimic what we have on the receiver side and there we have different locks per task type. I was a bit afraid about collisions:\nFrom the Stripped java-doc:\nThe guarantee provided by this class is that equal keys lead to the same lock (or semaphore), i.e. if (key1.equals(key2)) then striped.get(key1) \u003d\u003d striped.get(key2) (assuming Object.hashCode() is correctly implemented for the keys). Note that if key1 is not equal to key2, it is not guaranteed that striped.get(key1) !\u003d striped.get(key2); the elements might nevertheless be mapped to the same lock. The lower the number of stripes, the higher the probability of this happening.\n\n\nBut you are right I can have just one locks object with 4 * cfg.index().numStripedLocks()",
      "parentUuid": "ba091316_82ee6435",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 45,
        "endChar": 68
      },
      "revId": "3468ae3fe5993badcf3315f16954da21ba35418f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f084a49_7d1c9411",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/index/IndexEventLocks.java",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-10-30T17:21:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0801226c_882b2ccc",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 45,
        "endChar": 68
      },
      "revId": "3468ae3fe5993badcf3315f16954da21ba35418f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "789610eb_ff010d4d",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/index/IndexEventLocks.java",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-10-28T22:01:33Z",
      "side": 1,
      "message": "You could just get the index name and combine it with the task index id.",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 85,
        "endChar": 80
      },
      "revId": "3468ae3fe5993badcf3315f16954da21ba35418f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a71fc63_6484dbb6",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/index/IndexEventLocks.java",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-10-30T17:02:20Z",
      "side": 1,
      "message": "All the IndexTask sub-classes have implemented equals and hashcode, we are using that to add/remove from the queue so it must guarantee uniqueness. All this code will go away if I will use single locks object",
      "parentUuid": "789610eb_ff010d4d",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 85,
        "endChar": 80
      },
      "revId": "3468ae3fe5993badcf3315f16954da21ba35418f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60096678_31f293f8",
        "filename": "src/main/java/com/ericsson/gerrit/plugins/highavailability/index/IndexEventLocks.java",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-10-30T23:16:08Z",
      "side": 1,
      "message": "Good :-)",
      "parentUuid": "1a71fc63_6484dbb6",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 85,
        "endChar": 80
      },
      "revId": "3468ae3fe5993badcf3315f16954da21ba35418f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c36a3fe8_7b005d82",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 3
      },
      "lineNbr": 170,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-10-28T22:01:33Z",
      "side": 1,
      "message": "This shouldn\u0027t be an http settings IMHO but rather an index one.",
      "range": {
        "startLine": 170,
        "startChar": 3,
        "endLine": 170,
        "endChar": 7
      },
      "revId": "3468ae3fe5993badcf3315f16954da21ba35418f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e87f6d40_7b3d01c3",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 3
      },
      "lineNbr": 170,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-10-28T22:01:33Z",
      "side": 1,
      "message": "waitTimeout? WDYT?",
      "range": {
        "startLine": 170,
        "startChar": 8,
        "endLine": 170,
        "endChar": 26
      },
      "revId": "3468ae3fe5993badcf3315f16954da21ba35418f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "358872d9_c891c204",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 3
      },
      "lineNbr": 170,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-10-30T17:02:20Z",
      "side": 1,
      "message": "Yep I wasn\u0027t sure where to put it. I was asking about that in the comment.",
      "parentUuid": "c36a3fe8_7b005d82",
      "range": {
        "startLine": 170,
        "startChar": 3,
        "endLine": 170,
        "endChar": 7
      },
      "revId": "3468ae3fe5993badcf3315f16954da21ba35418f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb0f42d9_46d4265a",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 3
      },
      "lineNbr": 170,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-10-30T17:02:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e87f6d40_7b3d01c3",
      "range": {
        "startLine": 170,
        "startChar": 8,
        "endLine": 170,
        "endChar": 26
      },
      "revId": "3468ae3fe5993badcf3315f16954da21ba35418f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}